@inject Blazored.LocalStorage.ILocalStorageService localStore
@page "/productpage"
@using System.Globalization
@using FirstWebApp.Logic
@using Microsoft.VisualBasic.FileIO

<h3>Products</h3>
<div class="table">

    <table>
        <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Description
            </th>
            <th>
                Category
            </th>
            <th>
                Price
            </th>
            <th>
                Stock
            </th>
            <th>
                Date
            </th>
            <th>
                IsPublished
            </th>
            <th>
                Delete product
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in ProductList)
        {
            <tr>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.Description
                </td>
                <td>
                    @item.Category
                </td>
                <td>
                    @item.Price.ToString("C", new CultureInfo("de-DE"))
                </td>
                <td>
                    @item.Stock.ToString("N0")
                </td>
                <td>
                    @item.Date
                </td>
                <td>
                    @item.IsPublished
                </td>
                <td>
                    <button @onclick="() => Delete(item)" id="btn">
                        <span class="span-mother">
                            <span>D</span>
                            <span>E</span>
                            <span>L</span>
                            <span>E</span>
                            <span>T</span>
                            <span>E</span>
                          </span>
                        <span class="span-mother2">
                            <span class="secondletters">D</span>
                            <span class="secondletters">E</span>
                            <span class="secondletters">L</span>
                            <span class="secondletters">E</span>
                            <span class="secondletters">T</span>
                            <span class="secondletters">E</span>
                      </span>
                    </button>
                </td>
            </tr>
 
        }
        </tbody>
    </table>
</div>

<div style="display: flex">
    <a href="/addproductpage" id="AddProductButton">+</a>
    <p>Add product</p>
</div>

<CounterComp amountOfDice="1"></CounterComp>

@code {
    List<Product> ProductList = new List<Product>();
    string key = AddProduct.ProductListKey;

    public async Task Delete(Product item)
    {
        ProductList.Remove(item);
        await localStore.SetItemAsync("ProductsKey", ProductList);
    }

    protected override async Task OnInitializedAsync()
    {
        if(await localStore.GetItemAsync<List<Product>>("ProductsKey") != null)
            ProductList = await localStore.GetItemAsync<List<Product>>(key);
    }

}